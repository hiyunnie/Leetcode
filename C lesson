
/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <stdlib.h>
struct student {
    char name[10];
    short grade;
    int age;
};
void fun(int *des,int *src)
{
    *des = 10;
    *src = 20;
    
}

int main()
{
    //const
    const int a1=10;
    printf("%d\n",a1);
    int *p2 = &a1;
    p2 = 15;
    printf("%d\n", a1);
    
    
    //*******結構體
    struct student classA;
    printf("%lu bytes,%lu bytes,%lu bytes,%lu bytes\n",sizeof(classA.name),sizeof(classA.age),sizeof(classA.grade),sizeof(classA));
    //*******棧空間
    int *p;
    p = (int*)malloc(5 * sizeof(int)); // 申请动态内存，分配5个int类型的空间
    if (p == NULL) {
        printf("Memory allocation failed.\n");
        return 1; // 如果申请失败，退出程序
    }
    for (int i = 0; i < 5; i++) {
        p[i] = i + 1;
    }
    for (int i = 0; i < 5; i++) {
        printf("%d", p[i]);
    }
    free(p); // 释放动态内存
    
    printf("\n"); 
    //*******指標-1
    
    int c = 0x123456;
    char *p1 = (char*) &c;//強制轉換

    printf("p1:%x\n",*p1); 
    printf("p1:%x\n",p1[1]); 
    printf("p1:%x\n",p1[10]); //越界訪問
    
    printf("p1:%x\n",*(p1++)); //越界訪問
    printf("p1:%x\n",*p1);
    printf("p1:%x\n",*p1+1);
    printf("p1:%x\n",*++p1);
    printf("p1:%x\n",++*p1);
    
    //*******指標-2
    unsigned char a = 0x12;
    unsigned char b = 0x34;
    unsigned char *array[2] = {&a ,&b};
    unsigned char **ptr;
    ptr = &array[1];
    printf("\na : %p \nb : %p\n",&a,&b);
    printf("array[0] : %p\n",array[0]);
    printf("array[1] : %p\n",array[1]);
    printf("ptr : %p,0x%x\n",ptr,**ptr);
    
    **ptr = 0x56;
    printf("0x%x,0x%x,0x%x\n",b,*array[1],**ptr);
    printf("%lu bytes,%lu bytes,%lu bytes\n",sizeof(b),sizeof(array),sizeof(ptr));
    
    //*******二維
    int arr[2][3] = {{1, 2, 3}, {4, 5, 6}};
    //123
    //456
    int (*pArr)[3] = arr;  // 將指針指向二維數組
    printf("%d ", *(*(pArr+0)+2));//第一排的第三個
    // 使用指標打印數組
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            //printf("%d ", *(*(pArr + i) + j));
        }
        printf("\n");
    }
    return 0;
}
